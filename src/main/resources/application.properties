spring.application.name=Order

server.port=8089

spring.datasource.username=${DB_USER:user}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5436/order-db}

payment.service.url=${PAYMENT_SERVICE_URL:http://localhost:8083/payment}
client.service.url=${CLIENT_SERVICE_URL:http://localhost:8082/client/api}
product.service.url=${PRODUCT_SERVICE_URL:http://localhost:8081/product}
stock.service.url=${STOCK_SERVICE_URL:http://localhost:8085/inventory}

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.security.protocol=PLAINTEXT
spring.kafka.admin.request-timeout=150000
spring.kafka.listener.type=batch
spring.kafka.producer.acks=0
spring.kafka.producer.linger.ms=10
spring.kafka.producer.batch-size=1
spring.kafka.producer.request.timeout.ms=150000
spring.kafka.producer.max-poll-interval-ms=150000
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.OrderManagement.Order.controller.dto.OrderDto
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.isolation-level=READ_COMMITTED
spring.kafka.consumer.max-poll-interval-ms=30000
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.max-poll-records=1
spring.kafka.consumer.fetch-min-size=50000MB
spring.kafka.consumer.fetch-max-wait=0
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer